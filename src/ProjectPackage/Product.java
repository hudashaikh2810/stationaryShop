/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ProjectPackage;

import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import javax.swing.JOptionPane;

/**
 *
 * @author HUDA
 */
public class Product extends javax.swing.JFrame {
Connection con;
Statement smt;
String ide;
    /**
     * Creates new form Product
     */
    public Product() {
        
        /*sabse pehle page load hota hai to constructor chalegaaa
        
        */
        initComponents();
        /*iske bad humko banana hai connection database se taki jo humare database k table mei data hain wo humare application
        /k table mei bhi dikhe to hum call krege getConnection maethod*/ 
        this.getConnection();/*ab geConnection method mei jao*/
        /*
        ab connection banne k bad humara data jo hai database mei usko lana hai table me to addInfoToTable method mei jao
        */
        this.addInfoToTable();
    
         /*
        ab addBTN method pr jao
        */
                    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        updateProduct = new javax.swing.JButton();
        addProduct = new javax.swing.JButton();
        logOut = new javax.swing.JButton();
        deleteProduct = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        productTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        priceField = new javax.swing.JTextField();
        quantityField = new javax.swing.JTextField();
        idField = new javax.swing.JTextField();
        sid = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Products");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(160, 10, 110, 30);

        updateProduct.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        updateProduct.setForeground(new java.awt.Color(51, 51, 255));
        updateProduct.setText("Update Product");
        updateProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateProductActionPerformed(evt);
            }
        });
        jPanel2.add(updateProduct);
        updateProduct.setBounds(50, 290, 140, 30);

        addProduct.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        addProduct.setForeground(new java.awt.Color(51, 51, 255));
        addProduct.setText("Add a product");
        addProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProductActionPerformed(evt);
            }
        });
        jPanel2.add(addProduct);
        addProduct.setBounds(50, 240, 140, 30);

        logOut.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        logOut.setForeground(new java.awt.Color(51, 51, 255));
        logOut.setText("Logout");
        logOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutActionPerformed(evt);
            }
        });
        jPanel2.add(logOut);
        logOut.setBounds(220, 290, 150, 30);

        deleteProduct.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        deleteProduct.setForeground(new java.awt.Color(51, 51, 255));
        deleteProduct.setText("Delete a Product");
        deleteProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteProductActionPerformed(evt);
            }
        });
        jPanel2.add(deleteProduct);
        deleteProduct.setBounds(220, 240, 150, 30);

        productTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Name", "Price", "Quantity", "SupplierId"
            }
        ));
        productTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                productTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(productTable);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(440, 0, 540, 320);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("item Name");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(60, 90, 90, 40);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("item Price");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(60, 130, 80, 40);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("item Quantity");
        jPanel2.add(jLabel7);
        jLabel7.setBounds(60, 190, 100, 40);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Item Id");
        jPanel2.add(jLabel6);
        jLabel6.setBounds(60, 50, 70, 40);

        nameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameFieldActionPerformed(evt);
            }
        });
        jPanel2.add(nameField);
        nameField.setBounds(170, 80, 120, 30);

        priceField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceFieldActionPerformed(evt);
            }
        });
        jPanel2.add(priceField);
        priceField.setBounds(170, 120, 120, 30);

        quantityField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityFieldActionPerformed(evt);
            }
        });
        jPanel2.add(quantityField);
        quantityField.setBounds(170, 200, 120, 30);
        jPanel2.add(idField);
        idField.setBounds(170, 40, 120, 30);

        sid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sidActionPerformed(evt);
            }
        });
        jPanel2.add(sid);
        sid.setBounds(170, 160, 120, 30);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("SupplierId");
        jPanel2.add(jLabel8);
        jLabel8.setBounds(60, 160, 100, 40);

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\HUDA\\Desktop\\complete web development\\pictures\\stationary.jpg")); // NOI18N
        jPanel2.add(jLabel2);
        jLabel2.setBounds(0, 0, 440, 330);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 977, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
private void getConnection()
{
    
        try {
            /*
    1.sabse pehle database driver load krege hum 
    */
            Class.forName("com.mysql.cj.jdbc.Driver");
            /*Ab connection jodo database se iske liye hume DriverManager class lagegi jiske  getConnectionmethod se hum databse
            connection jodege yaha humne getConnection method ko  class k name se call kra hai naki class k object se kyuki yeh ek static method hai
            ab wapas constructor mei jao
            */
                        con=DriverManager.getConnection("jdbc:mysql://localhost:3306/stationaryandgiftshop?zeroDateTimeBehavior=CONVERT_TO_NULL","root","root");

        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Product.class.getName()).log(Level.SEVERE, null, ex);
        }
        
     
}
private void addInfoToTable()
{
    /*
    har table k sath ek TableModel jo ek interface se associated hota hai jo batata hai ki kese table me jo data hai dd update delete hoga
    tableName.getModel() se humko TableModel class ka object milta hai jisko hume DefaultTableModel k object mei typecase krna
    hota hai kyuki DefaultTableModel class use krna easy hota hai
    */
    DefaultTableModel model=(DefaultTableModel)productTable.getModel();
   
   
   ResultSet rs;
   /*ResultSet ka object isiliye kyuki humewo sara data JTable mei display krna hai to hume qureylikhege select * from item
   jo hume result mei table degi us table ko store krne k liye ResultSet class ka object chahiye
   
   */
   String id = "i99";
   String name = null;
   int quantity;
   String sid=null;
   int  price = 0;
   try
   {
        
            String query="Select * from items";
            /*
            Querry ko process krne  liye Statement class ka object chahiye jo hume Connection class k method createStatement()
            se milega
            */
            smt=con.createStatement();
            /*
            ab Statement class ka object mil gya to query process krne k liye executeQuery(query) method use krege
            executeQuery() isiliye use ki kyuki humko is query se milega ek table jo ResultSet k object mei store hoga
            */
            rs=smt.executeQuery(query);
            while(rs.next())
            {
                /*
                ab jab tak ResultSet k object mei rows hai unhe hume getString ya getInt method se humare variable mei 
                store krna hai
                */
                 id=rs.getString("ItemId");
                 name=rs.getString("ItemName");
                 price=rs.getInt("ItemPrize");
                 quantity=rs.getInt("Quantity");
                 sid=rs.getString("SupplierId");
                 /*
                 iske badd DefaultTable model ki method addRow humara data table mei add krdegi
                 wapas jao constructor me
                 */
               model.addRow(new Object[]{id,name,price,quantity,sid});
            }
            
            this.setId(id);
            
            
   }    catch (SQLException ex) {
            Logger.getLogger(Product.class.getName()).log(Level.SEVERE, null, ex);
        }
}
private void setId(String s)
{
    ide=s;
    generateId();
    
}
private String getId()
{
    return ide;
}
    private void updateProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateProductActionPerformed
    try {
        // TODO add your handling code here:
        String id=idField.getText();
       
        int price=Integer.parseInt(priceField.getText());
        int quantity=Integer.parseInt(quantityField.getText());
        smt=con.createStatement();
        String query="update items set ItemPrize="+price+",Quantity="+quantity+",SupplierId='"+sid.getText()+"' where ItemId='"+id+"'";
        smt.executeUpdate(query);
    } catch (SQLException ex) {
        Logger.getLogger(Product.class.getName()).log(Level.SEVERE, null, ex);
    }
    JOptionPane.showMessageDialog(null,"Update Succesfully");
         this.updateInTable(); 
    }//GEN-LAST:event_updateProductActionPerformed
private void updateInTable()
{
    int i=productTable.getSelectedRow();
    productTable.getModel().setValueAt(priceField.getText(),i,2);
      productTable.getModel().setValueAt(quantityField.getText(),i,3);
      productTable.getModel().setValueAt(sid.getText(),i,4);
      this.makeEmpty();
    
}
private void generateId()
{
    String id=this.getId();
    String s=id.substring(1);
    int x=Integer.parseInt(s);
    x++;
     Integer y=x;
     s='i'+y.toString();
     idField.setText(s);
    
}
    private void addProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProductActionPerformed
    try {
        // TODO add your handling code here:
       generateId();
        String id=idField.getText();
        String si=sid.getText();
        String name=nameField.getText();
        int price=Integer.parseInt(priceField.getText());
        int quantity=Integer.parseInt(quantityField.getText());
        smt=con.createStatement();
        String query="insert into items(ItemId,ItemName,ItemPrize,Quantity,SupplierId) values('"+id+"','"+name+"',"+price+","+quantity+",'"+si+"')";
        smt.executeUpdate(query);
        this.addRowsToTable(id,name,price,quantity,sid.getText());
        this.makeEmpty();
    } catch (SQLException ex) {
        Logger.getLogger(Product.class.getName()).log(Level.SEVERE, null, ex);
    }
     JOptionPane.showMessageDialog(null,"Added Succesfully");
       
        
    }//GEN-LAST:event_addProductActionPerformed
public  void addRowsToTable(String id,String name,int price,int quantity,String sid){
    DefaultTableModel model=(DefaultTableModel)productTable.getModel();
    model.addRow(new Object[]{id,name,price,quantity,sid});
   
    
    
    
    
}
private void makeEmpty()
{
    idField.setText("");
      nameField.setText("");
      priceField.setText("");
      quantityField.setText("");
      sid.setText("");
      this.getIde();
}

    private void logOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        MainPage m=new MainPage();
        m.setVisible(true);
    }//GEN-LAST:event_logOutActionPerformed

    private void deleteProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteProductActionPerformed
    try {
        // TODO add your handling code here:
        String id=idField.getText();
        smt=con.createStatement();
        String query="delete from items where ItemId='"+id+"'";
        smt.executeUpdate(query);
    } catch (SQLException ex) {
        Logger.getLogger(Product.class.getName()).log(Level.SEVERE, null, ex);
    }
      JOptionPane.showMessageDialog(null,"Deleted Succesfully");
      
      
      
    this.deleteFromTable(); 
          this.makeEmpty();

    }//GEN-LAST:event_deleteProductActionPerformed
private void deleteFromTable()
{
    int i=productTable.getSelectedRow();
    DefaultTableModel model=(DefaultTableModel)productTable.getModel();
    model.removeRow(i);
    
}
private void getIde()
{
    ResultSet rs;
    String id="i0";
    try {
         String query="select ItemId from items order by ItemId";
        smt=con.createStatement();
       
        rs=smt.executeQuery(query);
        while(rs.next())
        {
            id=rs.getString("ItemId");
        }
        this.setId(id);
    } catch (SQLException ex) {
        Logger.getLogger(Product.class.getName()).log(Level.SEVERE, null, ex);
    }
}
    private void productTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productTableMouseClicked
        // TODO add your handling code here:
        int index=productTable.getSelectedRow();
        String id= productTable.getModel().getValueAt(index,0).toString();
        String name=productTable.getModel().getValueAt(index,1).toString();
        String price=productTable.getModel().getValueAt(index,2).toString();
         String quantity =productTable.getModel().getValueAt(index,3).toString();
      String sid1=productTable.getModel().getValueAt(index,4).toString();
        idField.setText(id);
        nameField.setText(name);
        priceField.setText(price);
         quantityField.setText(quantity);
         sid.setText(sid1);
        
        
    }//GEN-LAST:event_productTableMouseClicked

    private void nameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameFieldActionPerformed

    private void quantityFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantityFieldActionPerformed

    private void priceFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceFieldActionPerformed

    private void sidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sidActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Product().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addProduct;
    private javax.swing.JButton deleteProduct;
    private javax.swing.JTextField idField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton logOut;
    private javax.swing.JTextField nameField;
    private javax.swing.JTextField priceField;
    private static javax.swing.JTable productTable;
    private javax.swing.JTextField quantityField;
    private javax.swing.JTextField sid;
    private javax.swing.JButton updateProduct;
    // End of variables declaration//GEN-END:variables
}
