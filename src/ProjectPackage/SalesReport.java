/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ProjectPackage;
import com.sun.speech.freetts.Voice;
import com.sun.speech.freetts.VoiceManager;
import jaco.mp3.player.MP3Player;
import java.io.File;
import java.sql.*;
import java.time.LocalDate;
import java.util.logging.Level;
import java.util.logging.Logger;
/**
 *
 * @author HUDA
 */
public class SalesReport extends javax.swing.JFrame {
Connection con;
Statement smt;
ResultSet rs;
int asum=0;

    /**
     * Creates new form SalesReport
     */
    public SalesReport() {
        initComponents();
        getConnection();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        todayGratestSale = new javax.swing.JButton();
        monthlySale = new javax.swing.JButton();
        greatestSaleTillNow = new javax.swing.JButton();
        saleBtn = new javax.swing.JButton();
        todaysSale = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        date = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        month1 = new com.toedter.calendar.JMonthChooser();
        monthBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        bestSellerDate = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        month = new com.toedter.calendar.JMonthChooser();
        worstSeller = new javax.swing.JButton();
        bestSellerTillNow = new javax.swing.JButton();
        bestSellerD = new javax.swing.JButton();
        leastSellerDate = new javax.swing.JButton();
        bestSellerD1 = new javax.swing.JButton();
        leastSellerDate1 = new javax.swing.JButton();
        leastSellerDate2 = new javax.swing.JButton();
        image = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(null);

        todayGratestSale.setBackground(new java.awt.Color(51, 51, 255));
        todayGratestSale.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        todayGratestSale.setForeground(new java.awt.Color(255, 255, 255));
        todayGratestSale.setText("GreatestSale of today");
        todayGratestSale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                todayGratestSaleActionPerformed(evt);
            }
        });
        jPanel1.add(todayGratestSale);
        todayGratestSale.setBounds(0, 10, 200, 30);

        monthlySale.setBackground(new java.awt.Color(51, 51, 255));
        monthlySale.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        monthlySale.setForeground(new java.awt.Color(255, 255, 255));
        monthlySale.setText("Monthly Sale");
        monthlySale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthlySaleActionPerformed(evt);
            }
        });
        jPanel1.add(monthlySale);
        monthlySale.setBounds(240, 50, 120, 30);

        greatestSaleTillNow.setBackground(new java.awt.Color(51, 51, 255));
        greatestSaleTillNow.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        greatestSaleTillNow.setForeground(new java.awt.Color(255, 255, 255));
        greatestSaleTillNow.setText("GreatestSale uptill now");
        greatestSaleTillNow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                greatestSaleTillNowActionPerformed(evt);
            }
        });
        jPanel1.add(greatestSaleTillNow);
        greatestSaleTillNow.setBounds(210, 10, 200, 30);

        saleBtn.setBackground(new java.awt.Color(51, 51, 255));
        saleBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        saleBtn.setForeground(new java.awt.Color(255, 255, 255));
        saleBtn.setText("Sale");
        saleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saleBtnActionPerformed(evt);
            }
        });
        jPanel1.add(saleBtn);
        saleBtn.setBounds(230, 90, 72, 26);

        todaysSale.setBackground(new java.awt.Color(51, 51, 255));
        todaysSale.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        todaysSale.setForeground(new java.awt.Color(255, 255, 255));
        todaysSale.setText("Today's sale");
        todaysSale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                todaysSaleActionPerformed(evt);
            }
        });
        jPanel1.add(todaysSale);
        todaysSale.setBounds(40, 50, 120, 30);

        textArea.setColumns(20);
        textArea.setRows(5);
        jScrollPane1.setViewportView(textArea);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(30, 200, 330, 120);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Select date");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(10, 140, 90, 20);
        jPanel1.add(date);
        date.setBounds(90, 90, 120, 30);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 255));
        jLabel3.setText("Select month");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(310, 150, 90, 20);
        jPanel1.add(month1);
        month1.setBounds(90, 140, 125, 22);

        monthBtn.setBackground(new java.awt.Color(51, 51, 255));
        monthBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        monthBtn.setForeground(new java.awt.Color(255, 255, 255));
        monthBtn.setText("Sale");
        monthBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthBtnActionPerformed(evt);
            }
        });
        jPanel1.add(monthBtn);
        monthBtn.setBounds(230, 130, 72, 26);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Select date");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(10, 90, 90, 20);
        jPanel1.add(bestSellerDate);
        bestSellerDate.setBounds(400, 90, 96, 22);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 255));
        jLabel5.setText("Select date");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(310, 90, 90, 20);
        jPanel1.add(month);
        month.setBounds(430, 150, 125, 22);

        worstSeller.setBackground(new java.awt.Color(51, 51, 255));
        worstSeller.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        worstSeller.setForeground(new java.awt.Color(255, 255, 255));
        worstSeller.setText("WorstSeller UptillNow");
        worstSeller.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                worstSellerActionPerformed(evt);
            }
        });
        jPanel1.add(worstSeller);
        worstSeller.setBounds(420, 50, 180, 26);

        bestSellerTillNow.setBackground(new java.awt.Color(51, 51, 255));
        bestSellerTillNow.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bestSellerTillNow.setForeground(new java.awt.Color(255, 255, 255));
        bestSellerTillNow.setText("BestSeller Uptill Now");
        bestSellerTillNow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bestSellerTillNowActionPerformed(evt);
            }
        });
        jPanel1.add(bestSellerTillNow);
        bestSellerTillNow.setBounds(420, 10, 180, 30);

        bestSellerD.setBackground(new java.awt.Color(51, 51, 255));
        bestSellerD.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bestSellerD.setForeground(new java.awt.Color(255, 255, 255));
        bestSellerD.setText("BestSeller");
        bestSellerD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bestSellerDActionPerformed(evt);
            }
        });
        jPanel1.add(bestSellerD);
        bestSellerD.setBounds(310, 120, 110, 26);

        leastSellerDate.setBackground(new java.awt.Color(51, 51, 255));
        leastSellerDate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        leastSellerDate.setForeground(new java.awt.Color(255, 255, 255));
        leastSellerDate.setText("LeastSeller");
        leastSellerDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leastSellerDateActionPerformed(evt);
            }
        });
        jPanel1.add(leastSellerDate);
        leastSellerDate.setBounds(440, 120, 110, 26);

        bestSellerD1.setBackground(new java.awt.Color(51, 51, 255));
        bestSellerD1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bestSellerD1.setForeground(new java.awt.Color(255, 255, 255));
        bestSellerD1.setText("BestSeller");
        bestSellerD1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bestSellerD1ActionPerformed(evt);
            }
        });
        jPanel1.add(bestSellerD1);
        bestSellerD1.setBounds(370, 180, 110, 26);

        leastSellerDate1.setBackground(new java.awt.Color(51, 51, 255));
        leastSellerDate1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        leastSellerDate1.setForeground(new java.awt.Color(255, 255, 255));
        leastSellerDate1.setText("LeastSeller");
        leastSellerDate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leastSellerDate1ActionPerformed(evt);
            }
        });
        jPanel1.add(leastSellerDate1);
        leastSellerDate1.setBounds(480, 180, 110, 26);

        leastSellerDate2.setBackground(new java.awt.Color(51, 51, 255));
        leastSellerDate2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        leastSellerDate2.setForeground(new java.awt.Color(255, 255, 255));
        leastSellerDate2.setText("Logout");
        leastSellerDate2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leastSellerDate2ActionPerformed(evt);
            }
        });
        jPanel1.add(leastSellerDate2);
        leastSellerDate2.setBounds(370, 220, 110, 26);

        image.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProjectPackage/stationary.jpg"))); // NOI18N
        jPanel1.add(image);
        image.setBounds(0, 0, 610, 330);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 613, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
private void getConnection()
{
    
    try {
        Class.forName("com.mysql.cj.jdbc.Driver");
        con=DriverManager.getConnection("jdbc:mysql://localhost:3306/stationaryandgiftshop?zeroDateTimeBehavior=CONVERT_TO_NULL","root","root");
    } catch (ClassNotFoundException | SQLException ex) {
        Logger.getLogger(Bill.class.getName()).log(Level.SEVERE, null, ex);
    }
}
private int showAmt()
{
    int sum=0;
    try {
        java.util.Date d=new java.util.Date();
        java.sql.Date sql=new java.sql.Date(d.getTime());
        smt=con.createStatement();
        String query="select sum(billamount) from bill group by(billdate) having billDate='"+sql+"'";
        rs=smt.executeQuery(query);
        while(rs.next())
            sum=rs.getInt("sum(billamount)");
    } catch (SQLException ex) {
        Logger.getLogger(SalesReport.class.getName()).log(Level.SEVERE, null, ex);
    }
   return sum; 
}
private void playMusic(int sum,int avg)
{
    String song="C:\\Users\\HUDA\\Downloads\\01. Welcome.mp3";
    
    if(sum==0)
    {
       song="C:\\Users\\HUDA\\Downloads\\old_Imtihan-Ruk Jaana Nahin(3)-[AudioTrimmer.com].mp3"; 
    }
    else
    {
        if(sum>avg)
       song="C:\\Users\\HUDA\\Downloads\\bollywood_Raees 2017 - Dhingana-[AudioTrimmer.com].mp3" ;
        else
        {
            
        }
    }
    MP3Player player=new MP3Player(new File(song));
    player.play();
}
private int showAvg()
{
    int sum=0;
    try {
        java.util.Date d=new java.util.Date();
        java.sql.Date sql=new java.sql.Date(d.getTime());
        smt=con.createStatement();
        String query="select sum(billamount) from bill";
        rs=smt.executeQuery(query);
        while(rs.next())
            sum=rs.getInt("sum(billamount)");
    } catch (SQLException ex) {
        Logger.getLogger(SalesReport.class.getName()).log(Level.SEVERE, null, ex);
    }
   return sum; 
}
private int showMx()
{
            int max=0;

    try {
        
        java.util.Date d=new java.util.Date();
        java.sql.Date sql=new java.sql.Date(d.getTime());
        smt=con.createStatement();
        String query="select sum(billamount) from bill where billdate<'"+sql+"'";
        rs=smt.executeQuery(query);
        while(rs.next())
        {
            max=rs.getInt("sum(billamount)");
        }
    } catch (SQLException ex) {
        Logger.getLogger(SalesReport.class.getName()).log(Level.SEVERE, null, ex);
    }
    return max;
}
private int showYesterdaySale()
{
    int yesterdayAmount=0;
    try {
        LocalDate localdate=LocalDate.now();
        LocalDate d=findPrevDay(localdate);
        smt=con.createStatement();
        String query="select sum(billamount) from bill where billdate='"+d+"'";
        rs=smt.executeQuery(query);
        while(rs.next())
        {
           yesterdayAmount=rs.getInt("sum(billamount)");
           
        }
    } catch (SQLException ex) {
        Logger.getLogger(SalesReport.class.getName()).log(Level.SEVERE, null, ex);
    }
    return yesterdayAmount;
   
}
 private static LocalDate findPrevDay(LocalDate localdate)
  {
    return localdate.minusDays(1);
  }
 private int greatestSleToday()
 {
        int sum=0;
    
    try {
         java.util.Date d=new java.util.Date();
        java.sql.Date sql=new java.sql.Date(d.getTime());
        smt=con.createStatement();
        String query="select max(billamount) from bill where billdate='"+sql+"'";
        rs=smt.executeQuery(query);
        while(rs.next())
        {
            sum=rs.getInt("max(billamount)");
            
        }
        return sum;
    } catch (SQLException ex) {
        Logger.getLogger(SalesReport.class.getName()).log(Level.SEVERE, null, ex);
    }
    return sum;
 }
    private void todayGratestSaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_todayGratestSaleActionPerformed
        // TODO add your handling code here:
         textArea.setText("");
        int sum=greatestSleToday();
        System.setProperty("freetts.voices", "com.sun.speech.freetts.en.us.cmu_us_kal.KevinVoiceDirectory");
        textArea.append("Your greatest sale of today is "+sum+"\n");
                Voice voice;
        VoiceManager vm=VoiceManager.getInstance();
        voice=vm.getVoice("kevin16");
         voice.setRate(120);// Setting the rate of the voice
            voice.setPitch(150);// Setting the Pitch of the voice
            voice.setVolume(3);// Setting the volume of the voice
        voice.allocate();
        voice.speak(textArea.getText());
        
    }//GEN-LAST:event_todayGratestSaleActionPerformed

    private void todaysSaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_todaysSaleActionPerformed
        // TODO add your handling code here:
        textArea.setText("");
        Integer sum=showAmt();
        int average=showAvg();
        java.util.Date d=new java.util.Date();
         System.setProperty("freetts.voices", "com.sun.speech.freetts.en.us.cmu_us_kal.KevinVoiceDirectory");
        Voice voice;
        VoiceManager vm=VoiceManager.getInstance();
        voice=vm.getVoice("kevin16");
         voice.setRate(120);// Setting the rate of the voice
            voice.setPitch(150);// Setting the Pitch of the voice
            voice.setVolume(3);// Setting the volume of the voice
        voice.allocate();
        if(sum==0)
        {
            textArea.append("Your sale uptill for today is 0 do not get disappointed.\nHere is a song that will motivate you");
            
           
            voice.speak(textArea.getText());
            playMusic(sum,average);
        }
        else
        {
          int max=showMx();
          if(sum==max)
          {
                           textArea.append("Your sale uptil today is"+sum+"\n.This amount is equal to your greatest sale uptill now!!Yuhooo\nYou are off to a good start.\nKeep going and you will cross your greatest sale");
              voice.speak(textArea.getText()); 
          }
          if(sum>max)
          {
              textArea.append("Your sale uptil today is"+sum+"\n.This amount is your greatest sale uptill now!!Yuhooo\nYou are off to a good start");
              voice.speak(textArea.getText());
          }
          else
          {
              int sum1=showYesterdaySale();
              if(sum==sum1)
              {
               textArea.append("Your sale uptill today is"+sum+"\nThis sale is equal to  yesterday sale keep going\nBest of luck");
                  voice.speak(textArea.getText());   
              }
              if(sum>sum1)
              {
                  textArea.append("Your sale uptill today is"+sum+"\nThis sale is greater than your yesterday sale which was"+sum1+" keep going\nBest of luck");
                  voice.speak(textArea.getText());
              }
              else
              {
                textArea.append("Your sale uptill today is"+sum+"\nThis sale is lesser than your yesterday sale which was"+sum1+"\nDont loose hope\nBest of luck");
                  voice.speak(textArea.getText());   
              }
              
          }
        }
    }//GEN-LAST:event_todaysSaleActionPerformed
private int getMonthlySale()
{
    textArea.setText("");
    int sale=0;
    try {
        smt=con.createStatement();
        java.util.Date d=new java.util.Date();
        int month=d.getMonth()+1;
        String query="select sum(billamount) from bill where month(billdate)='"+month+"'";
        rs=smt.executeQuery(query);
        while(rs.next())
        {
           sale=rs.getInt("sum(billamount)");
        }
    } catch (SQLException ex) {
        Logger.getLogger(SalesReport.class.getName()).log(Level.SEVERE, null, ex);
    }
    return sale;
}
private int prevMonthlySale()
{
  int sale=0;
    try {
        smt=con.createStatement();
        java.util.Date d=new java.util.Date();
        int month=d.getMonth();
        if(month==0)
        {
            month=12;
        }
       
        String query="select sum(billamount) from bill where month(billdate)='"+month+"'";
        rs=smt.executeQuery(query);
        while(rs.next())
        {
           sale=rs.getInt("sum(billamount)");
        }
    } catch (SQLException ex) {
        Logger.getLogger(SalesReport.class.getName()).log(Level.SEVERE, null, ex);
    }
    return sale;  
}
    private void monthlySaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthlySaleActionPerformed
        // TODO add your handling code here:
        int sale=getMonthlySale();
        int sale2=prevMonthlySale();
           System.setProperty("freetts.voices", "com.sun.speech.freetts.en.us.cmu_us_kal.KevinVoiceDirectory");
        Voice voice;
        VoiceManager vm=VoiceManager.getInstance();
        voice=vm.getVoice("kevin16");
         voice.setRate(120);// Setting the rate of the voice
            voice.setPitch(150);// Setting the Pitch of the voice
            voice.setVolume(3);// Setting the volume of the voice
        voice.allocate();
        if(sale==sale2)
        {
            textArea.append("Your monthly sale is"+sale+"\nThis sale is equal to your previous month sale");
        }
        if(sale>sale2)
        {
            textArea.append("Your monthly sale is"+sale+"\nThis is greater thhan your previous month sale which was"+sale2);
        }
        if(sale<sale2)
        {
             textArea.append("Your monthly sale is"+sale+"\nThis is greater thhan your previous month sale which was"+sale2);
             
        }
        voice.speak(textArea.getText());
    }//GEN-LAST:event_monthlySaleActionPerformed
private java.sql.Date greatestSleTill()
{
  int sum=0;
     java.util.Date d=new java.util.Date();
        java.sql.Date sql=new java.sql.Date(d.getTime());
    try {
        
        smt=con.createStatement();
        String query="select billdate,sum(billamount) from bill group by(billdate) order by sum(billamount) desc limit 1";
        rs=smt.executeQuery(query);
        while(rs.next())
        {
            sum=rs.getInt("sum(billamount)");
            sql=rs.getDate("billdate");
        }
        setDate(sum);
        
    } catch (SQLException ex) {
        Logger.getLogger(SalesReport.class.getName()).log(Level.SEVERE, null, ex);
    }
   
  return sql;
}
private void setDate(int sum)
{
    asum=sum;
   
}
private int getDate()
{
    return asum;
}
    private void greatestSaleTillNowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_greatestSaleTillNowActionPerformed
        // TODO add your handling code here:
        textArea.setText("");
          java.sql.Date d=greatestSleTill();
          int sum=getDate();
        System.setProperty("freetts.voices", "com.sun.speech.freetts.en.us.cmu_us_kal.KevinVoiceDirectory");
        textArea.append("Your greatest sale uptill now is "+sum+"\n which was on "+d);
                Voice voice;
        VoiceManager vm=VoiceManager.getInstance();
        voice=vm.getVoice("kevin16");
         voice.setRate(120);// Setting the rate of the voice
            voice.setPitch(150);// Setting the Pitch of the voice
            voice.setVolume(3);// Setting the volume of the voice
        voice.allocate();
        voice.speak(textArea.getText());
        
    }//GEN-LAST:event_greatestSaleTillNowActionPerformed

    private void saleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saleBtnActionPerformed
    textArea.setText("");
        int sum=0;
    java.util.Date d;
        d=date.getDate();
        java.sql.Date sql=new java.sql.Date(d.getTime());
        try {
        // TODO add your handling code here:
        
        smt=con.createStatement();
        String query="select sum(billamount) from bill group by(billdate) having billDate='"+sql+"'";
        rs=smt.executeQuery(query);
        while(rs.next())
            sum=rs.getInt("sum(billamount)");
    } catch (SQLException ex) {
        Logger.getLogger(SalesReport.class.getName()).log(Level.SEVERE, null, ex);
    }
    System.setProperty("freetts.voices", "com.sun.speech.freetts.en.us.cmu_us_kal.KevinVoiceDirectory");
        textArea.append("Your sale was"+sum+"\n on "+sql);
                Voice voice;
        VoiceManager vm=VoiceManager.getInstance();
        voice=vm.getVoice("kevin16");
         voice.setRate(120);// Setting the rate of the voice
            voice.setPitch(150);// Setting the Pitch of the voice
            voice.setVolume(3);// Setting the volume of the voice
        voice.allocate();
        voice.speak(textArea.getText());
   
        
    }//GEN-LAST:event_saleBtnActionPerformed

    private void monthBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthBtnActionPerformed

        textArea.setText("");
                int sale=0;
int month=month1.getMonth();
month=month+1;
    try {
        smt=con.createStatement();
       
        String query="select sum(billamount) from bill where month(billdate)='"+month+"'";
        rs=smt.executeQuery(query);
        while(rs.next())
        {
           sale=rs.getInt("sum(billamount)");
        }
        System.setProperty("freetts.voices", "com.sun.speech.freetts.en.us.cmu_us_kal.KevinVoiceDirectory");
        textArea.append("Your sale was"+sale+"\n on "+month);
                Voice voice;
        VoiceManager vm=VoiceManager.getInstance();
        voice=vm.getVoice("kevin16");
         voice.setRate(120);// Setting the rate of the voice
            voice.setPitch(150);// Setting the Pitch of the voice
            voice.setVolume(3);// Setting the volume of the voice
        voice.allocate();
        voice.speak(textArea.getText());
    } catch (SQLException ex) {
        Logger.getLogger(SalesReport.class.getName()).log(Level.SEVERE, null, ex);
    }        // TODO add your handling code here:
        
    }//GEN-LAST:event_monthBtnActionPerformed

    private void worstSellerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_worstSellerActionPerformed
        // TODO add your handling code here:
        int m=1;
    System.setProperty("freetts.voices", "com.sun.speech.freetts.en.us.cmu_us_kal.KevinVoiceDirectory");
        
                Voice voice;
        VoiceManager vm=VoiceManager.getInstance();
        voice=vm.getVoice("kevin16");
         voice.setRate(120);// Setting the rate of the voice
            voice.setPitch(150);// Setting the Pitch of the voice
            voice.setVolume(3);// Setting the volume of the voice
        voice.allocate();
try {
        // TODO add your handling code here:
        int x=0;
        String iname="0";
        smt=con.createStatement();
        String query="select sum(quantities),itemname from billitem natural join items group by itemid order by sum(quantities)  limit 2";
        rs=smt.executeQuery(query);
        while(rs.next())
        {
           x=rs.getInt("sum(quantities)");
           
           iname=rs.getString("itemname");
           textArea.append("Your least seller"+m+"is \n"+iname+"\n total \n"+x+" quantities of it has been sold uptill now\n");
           m++;
        }
    } catch (SQLException ex) {
        Logger.getLogger(SalesReport.class.getName()).log(Level.SEVERE, null, ex);
    }
voice.speak(textArea.getText());
    }//GEN-LAST:event_worstSellerActionPerformed

    private void bestSellerTillNowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bestSellerTillNowActionPerformed
  
  
    int m=1;
    System.setProperty("freetts.voices", "com.sun.speech.freetts.en.us.cmu_us_kal.KevinVoiceDirectory");
        
                Voice voice;
        VoiceManager vm=VoiceManager.getInstance();
        voice=vm.getVoice("kevin16");
         voice.setRate(120);// Setting the rate of the voice
            voice.setPitch(150);// Setting the Pitch of the voice
            voice.setVolume(3);// Setting the volume of the voice
        voice.allocate();
try {
        // TODO add your handling code here:
        int x=0;
        String iname="0";
        smt=con.createStatement();
        String query="select sum(quantities),itemname from billitem natural join items group by itemid order by sum(quantities) desc limit 3";
        rs=smt.executeQuery(query);
        while(rs.next())
        {
           x=rs.getInt("sum(quantities)");
           
           iname=rs.getString("itemname");
           textArea.append("Your best seller"+m+"is \n"+iname+"\n total \n"+x+" quantities of it has been sold uptill now\n");
           m++;
        }
    } catch (SQLException ex) {
        Logger.getLogger(SalesReport.class.getName()).log(Level.SEVERE, null, ex);
    }
voice.speak(textArea.getText());
    }//GEN-LAST:event_bestSellerTillNowActionPerformed

    private void bestSellerDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bestSellerDActionPerformed
    try {
        // TODO add your handling code here:
                int x=0;
        String iname="0";
        int m=1;
        System.setProperty("freetts.voices", "com.sun.speech.freetts.en.us.cmu_us_kal.KevinVoiceDirectory");
        
        Voice voice;
        VoiceManager vm=VoiceManager.getInstance();
        voice=vm.getVoice("kevin16");
        voice.setRate(120);// Setting the rate of the voice
        voice.setPitch(150);// Setting the Pitch of the voice
        voice.setVolume(3);// Setting the volume of the voice
        voice.allocate();
        
        java.util.Date d=bestSellerDate.getDate();
        java.sql.Date sql=new java.sql.Date(d.getTime());
        smt=con.createStatement();
        String query="select sum(quantities),itemname from billitem natural join items group by itemid,bdate having bdate='"+sql+"' order by sum(quantities) desc limit 2";
        rs=smt.executeQuery(query);
        while(rs.next())
        {
             x=rs.getInt("sum(quantities)");
           
           iname=rs.getString("itemname");
           textArea.append("Your best seller"+m+"is \n"+iname+"\n total \n"+x+" quantities of it has been sold on"+sql+"\n");
           m++;

        }
         voice.speak(textArea.getText());
    } catch (SQLException ex) {
        Logger.getLogger(SalesReport.class.getName()).log(Level.SEVERE, null, ex);
    }
   
    }//GEN-LAST:event_bestSellerDActionPerformed

    private void leastSellerDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leastSellerDateActionPerformed
    try {
        // TODO add your handling code here:
        int x=0;
        String iname="0";
        int m=1;
        System.setProperty("freetts.voices", "com.sun.speech.freetts.en.us.cmu_us_kal.KevinVoiceDirectory");
        
        Voice voice;
        VoiceManager vm=VoiceManager.getInstance();
        voice=vm.getVoice("kevin16");
        voice.setRate(120);// Setting the rate of the voice
        voice.setPitch(150);// Setting the Pitch of the voice
        voice.setVolume(3);// Setting the volume of the voice
        voice.allocate();
        
        java.util.Date d=bestSellerDate.getDate();
        java.sql.Date sql=new java.sql.Date(d.getTime());
        smt=con.createStatement();
        String query="select sum(quantities),itemname from billitem natural join items group by itemid,bdate having bdate='"+sql+"' order by sum(quantities) limit 2";
        rs=smt.executeQuery(query);
        while(rs.next())
        {
            x=rs.getInt("sum(quantities)");
            
            iname=rs.getString("itemname");
            textArea.append("Your least seller"+m+"is \n"+iname+"\n total \n"+x+" quantities of it has been sold on"+sql+"\n");
            m++;
            
        }
        voice.speak(textArea.getText());
    } catch (SQLException ex) {
        Logger.getLogger(SalesReport.class.getName()).log(Level.SEVERE, null, ex);
    }
        
    }//GEN-LAST:event_leastSellerDateActionPerformed

    private void bestSellerD1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bestSellerD1ActionPerformed
    try {
        // TODO add your handling code here:
        int x=0;
        String iname="0";
        int m=1;
        System.setProperty("freetts.voices", "com.sun.speech.freetts.en.us.cmu_us_kal.KevinVoiceDirectory");
        
        Voice voice;
        VoiceManager vm=VoiceManager.getInstance();
        voice=vm.getVoice("kevin16");
        voice.setRate(120);// Setting the rate of the voice
        voice.setPitch(150);// Setting the Pitch of the voice
        voice.setVolume(3);// Setting the volume of the voice
        voice.allocate();
        
        int sql=month.getMonth()+1;
        smt=con.createStatement();
        String query="select sum(quantities),itemname from billitem natural join items group by itemid,bdate having month(bdate)='"+sql+"' order by sum(quantities) desc limit 2";
        rs=smt.executeQuery(query);
        while(rs.next())
        {
            x=rs.getInt("sum(quantities)");
            
            iname=rs.getString("itemname");
            textArea.append("Your best seller"+m+"is \n"+iname+"\n total \n"+x+" quantities of it has been sold on"+sql+"\n");
            m++;
            
        }
        voice.speak(textArea.getText());
    } catch (SQLException ex) {
        Logger.getLogger(SalesReport.class.getName()).log(Level.SEVERE, null, ex);
    }
        
    }//GEN-LAST:event_bestSellerD1ActionPerformed

    private void leastSellerDate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leastSellerDate1ActionPerformed
    try {
        // TODO add your handling code here:
        int x=0;
        String iname="0";
        int m=1;
        System.setProperty("freetts.voices", "com.sun.speech.freetts.en.us.cmu_us_kal.KevinVoiceDirectory");
        
        Voice voice;
        VoiceManager vm=VoiceManager.getInstance();
        voice=vm.getVoice("kevin16");
        voice.setRate(120);// Setting the rate of the voice
        voice.setPitch(150);// Setting the Pitch of the voice
        voice.setVolume(3);// Setting the volume of the voice
        voice.allocate();
        
        int sql=month.getMonth()+1;
        smt=con.createStatement();
        String query="select sum(quantities),itemname from billitem natural join items group by itemid,bdate having month(bdate)='"+sql+"' order by sum(quantities) limit 2";
        rs=smt.executeQuery(query);
        while(rs.next())
        {
            x=rs.getInt("sum(quantities)");
            
            iname=rs.getString("itemname");
            textArea.append("Your least seller"+m+"is \n"+iname+"\n total \n"+x+" quantities of it has been sold on"+sql+"\n");
            m++;
            
        }
        voice.speak(textArea.getText());
    } catch (SQLException ex) {
        Logger.getLogger(SalesReport.class.getName()).log(Level.SEVERE, null, ex);
    }

        
    }//GEN-LAST:event_leastSellerDate1ActionPerformed

    private void leastSellerDate2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leastSellerDate2ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        MainPage p=new MainPage();
        p.setVisible(true);
        
    }//GEN-LAST:event_leastSellerDate2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SalesReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SalesReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SalesReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SalesReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SalesReport().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bestSellerD;
    private javax.swing.JButton bestSellerD1;
    private com.toedter.calendar.JDateChooser bestSellerDate;
    private javax.swing.JButton bestSellerTillNow;
    private com.toedter.calendar.JDateChooser date;
    private javax.swing.JButton greatestSaleTillNow;
    private javax.swing.JLabel image;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton leastSellerDate;
    private javax.swing.JButton leastSellerDate1;
    private javax.swing.JButton leastSellerDate2;
    private com.toedter.calendar.JMonthChooser month;
    private com.toedter.calendar.JMonthChooser month1;
    private javax.swing.JButton monthBtn;
    private javax.swing.JButton monthlySale;
    private javax.swing.JButton saleBtn;
    private javax.swing.JTextArea textArea;
    private javax.swing.JButton todayGratestSale;
    private javax.swing.JButton todaysSale;
    private javax.swing.JButton worstSeller;
    // End of variables declaration//GEN-END:variables
}
